{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\matcha\\\\client\\\\src\\\\user\\\\Auth\\\\Auth.js\";\nimport React, { useState } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Pseudo\"), React.createElement(Form.Control, {\n    type: \"text\",\n    id: \"pseudo\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    placeholder: \"Enter a Pseudo\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    type: \"mail\",\n    placeholder: \"Enter a Mail\",\n    id: \"email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), !formState.isValid ? React.createElement(Button, {\n    type: \"submit\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\") : React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")), React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/root/Desktop/matcha/client/src/user/Auth/Auth.js"],"names":["React","useState","Card","Form","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","isLoginMode","setIsLoginMode","switchModeHandler","setFormData","formState","inputs","name","undefined","email","isValid","password","value","prevMode","authSubmitHandler","event","preventDefault","console","log","inputHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\n\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <Form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Pseudo</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"pseudo\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              placeholder=\"Enter a Pseudo\"\n              onInput={inputHandler}\n            />\n          </Form.Group>\n        )}\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"mail\"\n            placeholder=\"Enter a Mail\"\n            id=\"email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n          />\n        </Form.Group>\n        {!formState.isValid ? <Button type=\"submit\" disabled>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button> : <Button type=\"submit\">\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>}\n      </Form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}