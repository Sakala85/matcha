{"ast":null,"code":"// import React, { useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/FormElements/Button';\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n// // import ImageUpload from '../../shared/components/FormElements/ImageUpload';\n// import {\n//   VALIDATOR_MINLENGTH,\n//   VALIDATOR_EMAIL\n// } from '../../shared/util/validators';\n// import { useForm } from '../../shared/hooks/form-hook';\n// import { useHttpClient } from '../../shared/hooks/http-hook';\n// import { AuthContext } from '../../shared/context/auth-context';\n// import './PlaceForm.css';\n// const SignIn = () => {\n//   const auth = useContext(AuthContext);\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const [formState, inputHandler] = useForm(\n//     {\n//       email: {\n//         value: '',\n//         isValid: false\n//       },\n//       pseudo: {\n//         value: '',\n//         isValid: false\n//       },\n//       password: {\n//         value: '',\n//         isValid: false\n//       }\n//     },\n//     false\n//   );\n//   const history = useHistory();\n//   const placeSubmitHandler = async event => {\n//     event.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       formData.append('email', formState.inputs.email.value);\n//       formData.append('pseudo', formState.inputs.pseudo.value);\n//       formData.append('password', formState.inputs.password.value);\n//     //   formData.append('image', formState.inputs.image.value);\n//       await sendRequest('http://localhost:5000/api/places', 'POST', formData, {\n//         Authorization: 'Bearer ' + auth.token\n//       });\n//       history.push('/');\n//     } catch (err) {}\n//   };\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />\n//       <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//         {isLoading && <LoadingSpinner asOverlay />}\n//         <Input\n//           id=\"email\"\n//           element=\"input\"\n//           type=\"text\"\n//           label=\"Email\"\n//           validators={[VALIDATOR_EMAIL()]}\n//           errorText=\"Please enter a valid email.\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"pseudo\"\n//           type=\"text\"\n//           element=\"input\"\n//           label=\"Pseudo\"\n//           validators={[VALIDATOR_MINLENGTH(5)]}\n//           errorText=\"Please enter a valid Pseudo (at least 5 characters).\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"address\"\n//           type=\"password\"\n//           element=\"input\"\n//           label=\"Password\"\n//           validators={[VALIDATOR_MINLENGTH()]}\n//           errorText=\"Please enter a valid Password (at least 5 characters + numbers).\"\n//           onInput={inputHandler}\n//         />\n//         {/* <ImageUpload\n//           id=\"image\"\n//           onInput={inputHandler}\n//           errorText=\"Please provide an image.\"\n//         /> */}\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           Sign In\n//         </Button>\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n// export default SignIn;","map":{"version":3,"sources":["C:/Users/root/Desktop/matcha/client/src/user/SignIn/SignIn.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useContext } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n// import Input from '../../shared/components/FormElements/Input';\r\n// import Button from '../../shared/components/FormElements/Button';\r\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n// // import ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n// import {\r\n//   VALIDATOR_MINLENGTH,\r\n//   VALIDATOR_EMAIL\r\n// } from '../../shared/util/validators';\r\n// import { useForm } from '../../shared/hooks/form-hook';\r\n// import { useHttpClient } from '../../shared/hooks/http-hook';\r\n// import { AuthContext } from '../../shared/context/auth-context';\r\n// import './PlaceForm.css';\r\n\r\n// const SignIn = () => {\r\n//   const auth = useContext(AuthContext);\r\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n//   const [formState, inputHandler] = useForm(\r\n//     {\r\n//       email: {\r\n//         value: '',\r\n//         isValid: false\r\n//       },\r\n//       pseudo: {\r\n//         value: '',\r\n//         isValid: false\r\n//       },\r\n//       password: {\r\n//         value: '',\r\n//         isValid: false\r\n//       }\r\n//     },\r\n//     false\r\n//   );\r\n\r\n//   const history = useHistory();\r\n\r\n//   const placeSubmitHandler = async event => {\r\n//     event.preventDefault();\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('email', formState.inputs.email.value);\r\n//       formData.append('pseudo', formState.inputs.pseudo.value);\r\n//       formData.append('password', formState.inputs.password.value);\r\n//     //   formData.append('image', formState.inputs.image.value);\r\n//       await sendRequest('http://localhost:5000/api/places', 'POST', formData, {\r\n//         Authorization: 'Bearer ' + auth.token\r\n//       });\r\n//       history.push('/');\r\n//     } catch (err) {}\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ErrorModal error={error} onClear={clearError} />\r\n//       <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n//         {isLoading && <LoadingSpinner asOverlay />}\r\n//         <Input\r\n//           id=\"email\"\r\n//           element=\"input\"\r\n//           type=\"text\"\r\n//           label=\"Email\"\r\n//           validators={[VALIDATOR_EMAIL()]}\r\n//           errorText=\"Please enter a valid email.\"\r\n//           onInput={inputHandler}\r\n//         />\r\n//         <Input\r\n//           id=\"pseudo\"\r\n//           type=\"text\"\r\n//           element=\"input\"\r\n//           label=\"Pseudo\"\r\n//           validators={[VALIDATOR_MINLENGTH(5)]}\r\n//           errorText=\"Please enter a valid Pseudo (at least 5 characters).\"\r\n//           onInput={inputHandler}\r\n//         />\r\n//         <Input\r\n//           id=\"address\"\r\n//           type=\"password\"\r\n//           element=\"input\"\r\n//           label=\"Password\"\r\n//           validators={[VALIDATOR_MINLENGTH()]}\r\n//           errorText=\"Please enter a valid Password (at least 5 characters + numbers).\"\r\n//           onInput={inputHandler}\r\n//         />\r\n//         {/* <ImageUpload\r\n//           id=\"image\"\r\n//           onInput={inputHandler}\r\n//           errorText=\"Please provide an image.\"\r\n//         /> */}\r\n//         <Button type=\"submit\" disabled={!formState.isValid}>\r\n//           Sign In\r\n//         </Button>\r\n//       </form>\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n\r\n// export default SignIn;"]},"metadata":{},"sourceType":"module"}